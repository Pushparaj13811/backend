paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      description: Create a new user account with email and phone verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - password
                - phone
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  minLength: 8
                  example: Password123!
                phone:
                  type: string
                  pattern: '^\+[1-9]\d{1,14}$'
                  example: '+1234567890'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/verify/email:
    post:
      tags:
        - Users
      summary: Verify email OTP
      description: Verify user's email using OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                otp:
                  type: string
                  pattern: '^\d{6}$'
                  example: '123456'
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/verify/phone:
    post:
      tags:
        - Users
      summary: Verify phone OTP
      description: Verify user's phone number using OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - otp
              properties:
                phone:
                  type: string
                  pattern: '^\+[1-9]\d{1,14}$'
                  example: '+1234567890'
                otp:
                  type: string
                  pattern: '^\d{6}$'
                  example: '123456'
      responses:
        '200':
          description: Phone verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/resend-otp:
    post:
      tags:
        - Users
      summary: Resend verification OTP
      description: Resend verification OTP to email or phone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - identifier
              properties:
                type:
                  type: string
                  enum: [email, phone]
                  example: email
                identifier:
                  type: string
                  example: john.doe@example.com
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Verification code sent successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/resend-otp/authenticated:
    post:
      tags:
        - Users
      summary: Resend verification OTP (Authenticated)
      description: Resend verification OTP to email or phone (requires authentication)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - identifier
                - password
              properties:
                type:
                  type: string
                  enum: [email, phone]
                  example: email
                identifier:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: Password123!
      responses:
        '200':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Verification code sent successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/login:
    post:
      tags:
        - Users
      summary: Login user
      description: Authenticate user and get access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@example.com
                password:
                  type: string
                  format: password
                  example: Password123!
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/refresh-token:
    post:
      tags:
        - Users
      summary: Refresh access token
      description: Get a new access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /users/logout:
    post:
      tags:
        - Users
      summary: Logout user
      description: Invalidate the current session
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logged out successfully
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      description: Get the authenticated user's profile information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - Users
      summary: Update user profile (PUT)
      description: Update the authenticated user's profile information (full update)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phone:
                  type: string
                  pattern: '^\+[1-9]\d{1,14}$'
                  example: '+1234567890'
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 123 Main St
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10001'
                    country:
                      type: string
                      example: USA
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    patch:
      tags:
        - Users
      summary: Update user profile (PATCH)
      description: Partially update the authenticated user's profile information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                phone:
                  type: string
                  pattern: '^\+[1-9]\d{1,14}$'
                  example: '+1234567890'
                address:
                  type: object
                  properties:
                    street:
                      type: string
                      example: 123 Main St
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    zipCode:
                      type: string
                      example: '10001'
                    country:
                      type: string
                      example: USA
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/change-password:
    patch:
      tags:
        - Users
      summary: Change password
      description: Change user's password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                  example: CurrentPassword123!
                newPassword:
                  type: string
                  format: password
                  minLength: 8
                  example: NewPassword123!
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password changed successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        phone:
          type: string
          example: '+1234567890'
        role:
          type: string
          enum: [user, admin]
          example: user
        status:
          type: string
          enum: [active, inactive, suspended]
          example: active
        emailVerification:
          type: object
          properties:
            isVerified:
              type: boolean
              example: true
            verifiedAt:
              type: string
              format: date-time
              example: '2024-03-26T04:01:27.376Z'
        phoneVerification:
          type: object
          properties:
            isVerified:
              type: boolean
              example: true
            verifiedAt:
              type: string
              format: date-time
              example: '2024-03-26T04:01:27.376Z'
        address:
          type: object
          properties:
            street:
              type: string
              example: 123 Main St
            city:
              type: string
              example: New York
            state:
              type: string
              example: NY
            zipCode:
              type: string
              example: '10001'
            country:
              type: string
              example: USA
        createdAt:
          type: string
          format: date-time
          example: '2024-03-26T04:01:27.376Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-03-26T04:01:27.376Z'

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
                example: Invalid input data
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
                example: Please log in to access this resource
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: error
              message:
                type: string
                example: Too many requests from this IP, please try again later 